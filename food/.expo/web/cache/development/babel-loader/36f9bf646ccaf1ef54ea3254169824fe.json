{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from 'react';\nimport yelp from \"../api/yelp\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var searchApi = function searchApi(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                term: searchTerm,\n                location: 'stamford ct'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage('Something went wrong');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    searchApi('pasta');\n  }, []);\n  return [searchApi, results, errorMessage];\n});","map":{"version":3,"sources":["C:/Users/Surface/Desktop/Github/RN-Course/food/src/hooks/useResults.js"],"names":["useEffect","useState","yelp","results","setResults","errorMessage","setErrorMessage","searchApi","searchTerm","get","params","limit","term","location","response","data","businesses"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP;AAEA,gBAAe,YAAM;AAAA,kBACaD,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACVE,OADU;AAAA,MACDC,UADC;;AAAA,mBAEuBH,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,MAEVI,YAFU;AAAA,MAEIC,eAFJ;;AAIjB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEaN,IAAI,CAACO,GAAL,CAAS,SAAT,EAAoB;AACvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,KAAK,EAAE,EADH;AAEJC,gBAAAA,IAAI,EAAEJ,UAFF;AAGJK,gBAAAA,QAAQ,EAAE;AAHN;AAD+B,aAApB,CAFb;;AAAA;AAEJC,YAAAA,QAFI;AASVV,YAAAA,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AATU;AAAA;;AAAA;AAAA;AAAA;AAYVV,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAZU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAgBAN,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,SAAS,CAAC,OAAD,CAAT;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACA,SAAD,EAAYJ,OAAZ,EAAqBE,YAArB,CAAP;AACH,CAzBD","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport yelp from '../api/yelp';\r\n\r\nexport default () => {\r\n    const [results, setResults] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    \r\n    const searchApi = async (searchTerm) => {\r\n        try{\r\n            const response = await yelp.get('/search', {\r\n                params: {\r\n                    limit: 50,\r\n                    term: searchTerm,\r\n                    location: 'stamford ct'\r\n                }\r\n            });\r\n            setResults(response.data.businesses);\r\n        }\r\n        catch(err){\r\n            setErrorMessage('Something went wrong');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        searchApi('pasta');\r\n    }, []);\r\n\r\n    return [searchApi, results, errorMessage];\r\n};"]},"metadata":{},"sourceType":"module"}